---
#: Setup sanic back-end service

- name: Create poolctl log directory
  file:
    path: /var/log/poolctl
    state: directory
    owner: root
    group: www-data
    mode: 0775


- name: Create poolctl var-lib directory
  file:
    path: /var/lib/poolctl
    state: directory
    owner: '{{ poolctl_user }}'
    group: root
    mode: 0775



- name: Create poolctl app distribution directory
  file:
    path: '{{ dist_home }}'
    state: directory
    recurse: yes


- name: Create poolctl bin directory
  file:
    path: '{{ poolctl_home }}/bin'
    state: directory
    recurse: yes


- name: Sync local sanic-be directory to remote
  synchronize:
    src: ../../../sanic-be
    dest: '{{ dist_home }}'
    checksum: yes  # compare based on checksums rather than timestamps
    owner: no
    group: no
    perms: no
    times: no
    rsync_opts:
      - '--exclude=_local.py'
      - '--exclude="*.pyc"'
      - '--exclude=__pycache__'
      - '--exclude=.pytest_cache'
      - '--delete'
      - '--ignore-errors'
      - '--force'
  notify: restart poolctl service


- name: Prepare custom virtualenv executable
  template:
    src: virtualenv-custom.j2
    dest: '{{ poolctl_home }}/bin/virtualenv-custom'
    owner: '{{ poolctl_user }}'
    group: '{{ poolctl_group }}'
    mode: 0775


- name: Create virtualenv, update pip and setuptools
  pip:
    virtualenv: '{{ pyvenv_home }}'
    virtualenv_command: '{{ poolctl_home }}/bin/virtualenv-custom'
    name:
      - pip
      - setuptools
    state: latest


- name: Make sure wheel is not present
  pip:
    virtualenv: '{{ pyvenv_home }}'
    name:
      - wheel
    state: absent


- name: Install requirements in the virtualenv
  pip:
    virtualenv: '{{ pyvenv_home }}'
    requirements: '{{ dist_home }}/sanic-be/requirements/req-runtime.txt'
  notify: restart poolctl service


- name: Create poolctl-related environment vars file
  template:
    src: poolctl.sh.j2
    dest: /etc/profile.d/poolctl.sh
    owner: root
    group: root
    mode: 0644
  notify: reboot


- name: Create sanic systemd script
  template:
    src: poolctl-be.service.j2
    dest: /lib/systemd/system/poolctl-restapi.service
    owner: root
    group: root
    mode: 0644
  notify: restart poolctl service


- name: Enable and start poolctl-restapi service
  systemd:
    name: poolctl-restapi
    state: started
    enabled: yes
    daemon_reload: yes
