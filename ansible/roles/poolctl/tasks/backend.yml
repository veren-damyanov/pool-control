---
#: Setup sanic back-end service

- name: create poolctl dir
  file:
    path: /opt/poolctl
    state: directory
    recurse: yes

- name: sync local sanic-be directory to remote
  synchronize:
    src: ../../../sanic-be
    dest: /opt/poolctl/
    checksum: yes  # compare based on checksums rather than timestamps
    rsync_opts:
      - '--exclude="*.pyc"'
      - '--exclude=__pycache__'
      - '--exclude=_local.py'
      - '--delete'
      - '--ignore-errors'
      - '--force'
  notify: restart poolctl service

- name: prepare custom virtualenv executable
  template:
    src: virtualenv-custom.j2
    dest: /usr/local/bin/virtualenv-custom
    mode: 0775

- name: create virtualenv, update pip and setuptools
  pip:
    virtualenv: '{{ pyvenv_home }}'
    virtualenv_command: virtualenv-custom
    name:
      - pip
      - setuptools
    state: latest

- name: make sure wheel is not present
  pip:
    virtualenv: '{{ pyvenv_home }}'
    name:
      - wheel
    state: absent

- name: install requirements in the virtualenv
  pip:
    virtualenv: '{{ pyvenv_home }}'
    requirements: /opt/poolctl/sanic-be/requirements/req-runtime.txt
  notify: restart poolctl service

- name: set environment name variable creation
  template:
    src: poolctl.sh.j2
    dest: /etc/profile.d/poolctl.sh
  notify: reboot

- name: create sanic systemd script
  template:
    src: poolctl-be.service.j2
    dest: /lib/systemd/system/poolctl-restapi.service
  notify: restart poolctl service

- name: enable and start poolctl-restapi service
  systemd:
    name: poolctl-restapi
    state: started
    enabled: yes
    daemon_reload: yes
